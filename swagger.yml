swagger: "2.0"
version: "1.0.0"
title: "More Foreign Words"
tags:
- name: "word"
  description: "CRUD for a single word"

paths:
  /word:
    get:
      tags:
      - "word"
      summary: used to find a single word
      description: ""
      produces:
      - "application/json"
      parameters:
        - in: path
          name: value
          schema:
            type: string
          required: true
          description: The very `word` you want to find in the database
      responses:
        '200':
          description: A successful response, containing the requested document
        '404':
          description: The requested `value` was correct but no entry where found in the database
        '422':
          description: Passing a path param `value` that is not alphabetical
        '500':
          description: An error triggered while querying the database, try again later
    post:
      tags:
      - "word"
      summary: used to add a single word
      description: ""
      produces:
      - "application/json"
      parameters:
        - in: body
          name: value
          schema:
            type: string
          required: true
          description: The very word you want to add in the database
        - in: body
          name: translations
          schema:
            type: "array"
            items:
              type: "string"
          required: true
          description: The translation.s of the given word
      responses:
        '201':
          description: A successful response, containing the new document
        '409':
          description: The given `value` entry already exists, try updating it by using the dedicated endpoint
        '422':
          description: An error triggered by either omiting `value`, `translations`, both, sending a `value` not alphabetical or providing extra parameters
        '500':
          description: An error triggered while querying the database, try again later
  /word/{value}:
    post:
      tags:
      - "word"
      summary: used to update a single word
      description: ""
      produces:
      - "application/json"
      parameters:
        - in: body
          name: word
          schema:
            $ref: "#/definitions/Word"
          required: true
          description: The `value` of the word you want to update, and the `translations` corresponding
        - in: body
          name: replace
          schema:
            type: boolean
          required: false
          description: Default `False`, set to `True` if you want to erase the current translation.s of the word to update
        - in: body
          name: upsert
          schema:
            type: boolean
          required: false
          description:  Default `False`, set to `True` if you want to insert the word if no entry corresponding to the given `value` were found
      responses:
        '201':
          description: A successful response, containing the updated document
        '422':
          description: omited the `word` parameter
        '500':
          description: An error triggered while querying the database, try again later
    delete:
      tags:
      - "word"
      summary: used to delete a single word
      description: ""
      produces:
      - "application/json"
      parameters:
        - in: body
          name: value
          schema:
            type: string
          required: true
          description: The value of the word you want to delete
      responses:
        '200':
          description: A successful response, asserting that the word has been removed from the database
        '404':
          description: No entry with the given `value` where found, please check spelling and try again
        '500':
          description: An error triggered while querying the database, try again later


definitions:
  Word:
    type: "object"
    properties:
      value:
        type: "string"
      translations:
        type: "array"
        items:
          type: "string"
  ApiResponse:
    type: "object"
    properties:
      status:
        type: "string"
      message:
        type: "string"
      data:
        type: "object"